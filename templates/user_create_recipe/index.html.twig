{% extends "base.html.twig" %}

{% block body %}

<h2>Créer une nouvelle recette</h2>

<div class="container_creation">

    <div class="draw_explanations">
        <p>Pour créer une recette sur notre site, veuillez remplir tous les champs obligatoires.</p>
        <p>Il est également essentiel de spécifier le nombre de personnes pour lesquelles la recette est conçue. Cela permettra de calculer correctement les quantités d'ingrédients lorsque vous consultez la recette et ajustez le nombre de portions.</p>
    </div>

    {{ form_start(recipeForm, {'attr': {'class': 'form_layout-recipe'}}) }}
        <fieldset class="form_field">
            {{ form_label(recipeForm.title, null, {'label_attr':{'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.title, {'attr': {'class': 'form_input'}}) }}  
        </fieldset> 

        <fieldset class="form_field">
            {{ form_label(recipeForm.description, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.description, {'attr': {'class': 'form_input-desc','maxlength': 200}}) }}
            {{ form_errors(recipeForm.description) }}    
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.photo, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.photo, {'attr': {'class': 'form_input'}}) }}
            {{ form_errors(recipeForm.photo) }}
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.duration, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.duration, {'attr': {'class': 'form_input'}}) }}
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.recipecategory, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.recipecategory, {'attr': {'class': 'form_input'}}) }}
        </fieldset> 

        <fieldset class="form_field">
            {{ form_label(recipeForm.recipedifficulty, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.recipedifficulty, {'attr': {'class': 'form_input'}}) }}
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.servings, null, {'label_attr': {'class': 'form_label'}}) }}
            {{ form_widget(recipeForm.servings, {'attr': {'class': 'form_input'}}) }}
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.ingredients, null, {'label_attr': {'class': 'form_label'}}) }}
            <p class="ingredient_collection select_container" data-prototype="{{ form_widget(recipeForm.ingredients.vars.prototype)|e('html_attr') }}">
                {{ form_widget(recipeForm.ingredients) }}
                <button type="button" class="add_ingredient-link">Ajouter un ingrédient</button>
            </p>
        </fieldset>

        <fieldset class="form_field">
            {{ form_label(recipeForm.recipestep, null, {'label_attr': {'class': 'form_label'}}) }}
            <p class="step_collection select_container" data-prototype="{{ form_widget(recipeForm.recipestep.vars.prototype)|e('html_attr')}}">
                {{ form_widget(recipeForm.recipestep) }}
                <button type="button" class="add_step-link">Ajouter une étape</button>
            </p>
        </fieldset>

        <button type="submit" class="form_btn-recipe">Envoyer</button>

        <fieldset class="form_field">
            <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
        </fieldset>
    
    {{ form_end(recipeForm) }}

</div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ingredientCollectionHolder = document.querySelector('.ingredient_collection');
            const addIngredientButton = document.querySelector('.add_ingredient-link');
            ingredientCollectionHolder.dataset.index = ingredientCollectionHolder.querySelectorAll('input').length;

            addIngredientButton.addEventListener('click', function() {
                const prototype = ingredientCollectionHolder.dataset.prototype;
                const index = ingredientCollectionHolder.dataset.index;
                const newForm = prototype.replace(/__name__/g, index);
                ingredientCollectionHolder.dataset.index++;
                const newFormElement = document.createElement('div');
                newFormElement.innerHTML = newForm;
                newFormElement.classList.add('new_ingredient-item');
                ingredientCollectionHolder.appendChild(newFormElement); 
                addDeleteButton(newFormElement);
            });

            const stepCollectionHolder = document.querySelector('.step_collection');
            const addStepButton = document.querySelector('.add_step-link');
            stepCollectionHolder.dataset.index = stepCollectionHolder.querySelectorAll('input').length;

            addStepButton.addEventListener('click', function() {
                const prototype = stepCollectionHolder.dataset.prototype;
                const index = stepCollectionHolder.dataset.index;
                const newForm = prototype.replace(/__name__/g, index);
                stepCollectionHolder.dataset.index++;
                const newFormElement = document.createElement('div');
                newFormElement.innerHTML = newForm;
                newFormElement.classList.add('new_step-item');
                stepCollectionHolder.appendChild(newFormElement); 
                addDeleteButton(newFormElement);
            });

            function addDeleteButton(element) {
                const removeButton = document.createElement('button');
                removeButton.type = 'button';
                removeButton.classList.add('remove_link');

                const removeIcon = document.createElement('img');
                removeIcon.src = '/build/images/else/poubelle.png'; 
                removeIcon.alt = 'Supprimer';
                removeIcon.classList.add('remove_icon');

                removeButton.appendChild(removeIcon);
                element.appendChild(removeButton);

                removeButton.addEventListener('click', function() {
                    element.remove();
                });
            }

            // Ajoutez les boutons de suppression existants
            document.querySelectorAll('.new_ingredient-item, .new_step-item').forEach(function(element) {
                addDeleteButton(element);
            });
        });

    </script>

{% endblock %}
